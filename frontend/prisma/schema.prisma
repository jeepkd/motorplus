generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model Address {
  id          Int       @id @default(autoincrement())
  address     String?
  subdistrict String?
  district    String?
  province    String?
  zipcode     String?
  User        User?
  Customer    Customer?
}

model Vehicle {
  id             Int          @id @default(autoincrement())
  vehicleModelId Int
  vehicleColorId Int
  chassisNumber  String       @unique
  engineNumber   String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
  VehicleModel   VehicleModel @relation(fields: [vehicleModelId], references: [id])
  VehicleColor   VehicleColor @relation(fields: [vehicleColorId], references: [id])
  Contract       Contract[]
}

model VehicleBrand {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now()) @updatedAt
  VehicleModel VehicleModel[]
}

model VehicleColor {
  id        Int       @id @default(autoincrement())
  code      String    @unique
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  vehicle   Vehicle[]
}

model VehicleModel {
  id             Int          @id @default(autoincrement())
  name           String       @unique
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
  Vehicle        Vehicle[]
  vehicleBrandId Int
  VehicleBrand   VehicleBrand @relation(fields: [vehicleBrandId], references: [id])
}

model Contract {
  id             Int      @id @default(autoincrement())
  contractNumber String?  @unique
  Customer       Customer @relation(fields: [customerId], references: [id])
  Vehicle        Vehicle  @relation(fields: [vehicleId], references: [id])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now()) @updatedAt
  customerId     Int
  vehicleId      Int
}

model Customer {
  id             Int        @id @default(autoincrement())
  customerNumber String?    @unique
  title          String?
  firstname      String?
  lastname       String?
  telephone      String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @default(now()) @updatedAt
  addressId      Int        @unique
  Address        Address    @relation(fields: [addressId], references: [id])
  Contract       Contract[]
}

model User {
  id           Int      @id @default(autoincrement())
  email        String?  @unique
  username     String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  role         Role     @default(USER)
  updatedAt    DateTime @default(now()) @updatedAt
  addressId    Int      @unique
  Address      Address  @relation(fields: [addressId], references: [id])
}
